import discord
from discord.ext import commands
from datetime import datetime
import pytz
import os
import random
import aiohttp

TOKEN = 'MTI3MTQ5MDM3MDM1Nzk1NjY3MQ.Ghx3zP.9SIkuPNR-1wDwnuEhc7JIFOa2oJYHGW3xxIvXU'

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='!', intents=intents)

MEMES_DIR = 'memes'
THEMES = {
    'animals': {
        'folder': 'animals',
        'memes': [
            {'file': 'cat.jpg', 'weight': 5},
            {'file': 'dog.jpg', 'weight': 3},
            {'file': 'panda.jpg', 'weight': 2}
        ]
    },
    'general': {
        'folder': 'general',
        'memes': [
            {'file': 'funny1.jpg', 'weight': 4},
            {'file': 'funny2.jpg', 'weight': 6}
        ]
    }
}

def choose_meme(theme):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –º–µ–º–∞—Ö –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
    theme_data = THEMES.get(theme)
    if not theme_data:
        return None
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–µ–º–æ–≤ —Å —É—á–µ—Ç–æ–º –∏—Ö –≤–µ—Å–∞
    memes = theme_data['memes']
    weighted_memes = []
    for meme in memes:
        weighted_memes.extend([meme['file']] * meme['weight'])
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º
    selected_meme = random.choice(weighted_memes)
    return os.path.join(MEMES_DIR, theme_data['folder'], selected_meme)

@bot.command(name='commands')
async def list_commands(ctx):
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥
    commands_list = [f'**{command.name}**: {command.description or "No description"}' for command in bot.commands]
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥
    commands_message = "\n".join(commands_list)
    await ctx.send(f"–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n{commands_message}")

@bot.command(name='meme')
async def send_meme(ctx, theme='general'):
    meme_path = choose_meme(theme)
    if meme_path and os.path.isfile(meme_path):
        await ctx.send(file=discord.File(meme_path))
    else:
        await ctx.send("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –º–µ–º –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º—ã.")


@bot.command(name='time')
async def time(ctx, timezone: str = 'UTC'):
    try:
        now = datetime.now(pytz.timezone(timezone))
        current_time = now.strftime("%Y-%m-%d %H:%M:%S")
        await ctx.send(f'–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤{timezone} - {current_time}')
    except Exception as e:
        await ctx.send(f'–û—à–∏–±–∫–∞: {str(e)}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å')
@bot.command(name='coinflip')
async def coinflip(ctx):
    result = random.choice(['–û—Ä—ë–ª', '–†–µ—à–∫–∞'])
    await ctx.send(f'–ú–æ–Ω–µ—Ç–∫–∞ –ø–æ–∫–∞–∑–∞–ª–∞: {result}')


@bot.command(name='emoji')
async def emoji(ctx):
    emojis = ['üòÄ', 'üòÇ', 'ü•≥', 'üòé', 'üëç', 'üí•', 'üî•', 'üéâ', 'ü§ñ', 'üíª']
    random_emoji = random.choice(emojis)
    await ctx.send(f'–í–æ—Ç –≤–∞—à —Å–ª—É—á–∞–π–Ω—ã–π —Å–º–∞–π–ª–∏–∫: {random_emoji}')

MEMES_FOLDER = 'BOT/images'

@bot.command(name='mem')
async def send_meme(ctx):

    memes = os.listdir(MEMES_FOLDER)
    if not memes:
        await ctx.send("–ü–∞–ø–∫–∞ —Å –º–µ–º–∞–º–∏ –ø—É—Å—Ç–∞!")
        return
    random_meme = random.choice(memes)
    meme_path = os.path.join(MEMES_FOLDER, random_meme)

    await ctx.send(file=discord.File(meme_path))
@bot.command(name='anime')
async def send_anime(ctx):
    async with aiohttp.ClientSession() as session:
        async with session.get('https://nekos.life/api/v2/img/wallpaper') as response:
            if response.status == 200:
                data = await response.json()
                image_url = data['url']
                await ctx.send(image_url)
            else:
                await ctx.send("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@bot.event
async def on_ready():
    print(f'–í–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É –∫–∞–∫ {bot.user}')
bot.run(TOKEN)
